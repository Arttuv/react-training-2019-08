{"version":3,"sources":["photos.js","App.js","serviceWorker.js","index.js"],"names":["photos","src","width","height","SimplePagination","props","pagination","className","hasOwnProperty","href","url","tabIndex","App","useState","currentImage","setCurrentImage","viewerIsOpen","setViewerIsOpen","fetchedPhotos","setFetchedPhotos","setPagination","openLightbox","useCallback","event","photo","index","useEffect","a","fetch","then","response","links","require","parse","headers","get","console","log","json","data","converted","map","item","newObject","fetchPhotos","onClick","onClose","currentIndex","views","x","srcset","srcSet","caption","title","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4a87d795.chunk.js","sourcesContent":["export const photos = [\n    {\n      src: \"https://source.unsplash.com/2ShvY8Lf6l0/800x599\",\n      width: 4,\n      height: 3\n    },\n    {\n      src: \"https://source.unsplash.com/Dm-qxdynoEc/800x799\",\n      width: 1,\n      height: 1\n    },\n    {\n      src: \"https://source.unsplash.com/qDkso9nvCg0/600x799\",\n      width: 3,\n      height: 4\n    },\n    {\n      src: \"https://source.unsplash.com/iecJiKe_RNg/600x799\",\n      width: 3,\n      height: 4\n    },\n    {\n      src: \"https://source.unsplash.com/epcsn8Ed8kY/600x799\",\n      width: 3,\n      height: 4\n    },\n    {\n      src: \"https://source.unsplash.com/NQSWvyVRIJk/800x599\",\n      width: 4,\n      height: 3\n    },\n    {\n      src: \"https://source.unsplash.com/zh7GEuORbUw/600x799\",\n      width: 3,\n      height: 4\n    },\n    {\n      src: \"https://source.unsplash.com/PpOHJezOalU/800x599\",\n      width: 4,\n      height: 3\n    },\n    {\n      src: \"https://source.unsplash.com/I1ASdgphUH4/800x599\",\n      width: 4,\n      height: 3\n    },\n    {\n      src: \"https://source.unsplash.com/XiDA78wAZVw/600x799\",\n      width: 3,\n      height: 4\n    },\n    {\n      src: \"https://source.unsplash.com/x8xJpClTvR0/800x599\",\n      width: 4,\n      height: 3\n    },\n    {\n      src: \"https://source.unsplash.com/qGQNmBE7mYw/800x599\",\n      width: 4,\n      height: 3\n    },\n    {\n      src: \"https://source.unsplash.com/NuO6iTBkHxE/800x599\",\n      width: 4,\n      height: 3\n    },\n    {\n      src: \"https://source.unsplash.com/pF1ug8ysTtY/600x400\",\n      width: 4,\n      height: 3\n    },\n    {\n      src: \"https://source.unsplash.com/A-fubu9QJxE/800x533\",\n      width: 4,\n      height: 3\n    },\n    {\n      src: \"https://source.unsplash.com/5P91SF0zNsI/740x494\",\n      width: 4,\n      height: 3\n    }\n  ];\n  ","import React, {useState, useCallback, useEffect} from 'react';\nimport { render } from \"react-dom\";\nimport Gallery from \"react-photo-gallery\";\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\nimport './App.css';\nimport { photos } from \"./photos\";\n\nfunction App() {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\n  const [fetchedPhotos, setFetchedPhotos] = useState(photos);\n  const [pagination, setPagination] = useState(null);\n\n  const openLightbox = useCallback((event, { photo, index }) => {\n    setCurrentImage(index);\n    setViewerIsOpen(true);\n  }, []);\n\n  const closeLightbox = () => {\n    setCurrentImage(0);\n    setViewerIsOpen(false);\n  };\n\n  useEffect(() => {\n   const fetchPhotos = async() => {\n    fetch('https://jsonplaceholder.typicode.com/photos/?_page=1&limit=10')\n    .then(response => {\n      var parse = require('parse-link-header');\n      \n      var links = parse(response.headers.get('Link'));\n      console.log(typeof(links));\n      console.log(links);\n      console.log(links['next']);\n      setPagination(links);\n      return response.json();\n    })\n    .then((data) => { \n        var converted = data.map(item => {\n          var newObject = {};\n          newObject['src'] = item.url;\n          newObject['width'] = 1;\n          newObject['height'] = 1;\n          return newObject;\n        });\n        console.log(data);\n        console.log(converted);\n        setFetchedPhotos(converted);\n    })\n  };\n\n  fetchPhotos();\n\n  }, []);\n\n  return (\n    <div>\n      <Gallery photos={fetchedPhotos} onClick={openLightbox} />\n      <ModalGateway>\n        {viewerIsOpen ? (\n          <Modal onClose={closeLightbox}>\n            <Carousel\n              currentIndex={currentImage}\n              views={fetchedPhotos.map(x => ({\n                ...x,\n                srcset: x.srcSet,\n                caption: x.title\n              }))}\n            />\n          </Modal>\n        ) : null}\n      </ModalGateway>\n      \n      <SimplePagination pagination={pagination} />\n\n    </div>\n  );\n}\n\nfunction GlorifiedGallery(props) {\n\n}\n\nfunction SimplePagination(props) {\n  return (  \n    <nav>\n      {props.pagination != null ?\n        <ul className=\"pagination justify-content-center\">\n          {props.pagination.hasOwnProperty('previous') ? \n              <li className=\"page-item\"><a className=\"page-link\" href={props.pagination['previous'].url} tabIndex=\"-1\">Previous</a></li> :\n              <li className=\"page-item disabled\"><a className=\"page-link\" href=\"#\" tabIndex=\"-1\">Previous</a></li>\n          }\n          <li className=\"page-item\"><a className=\"page-link\" href=\"#\">1</a></li>\n          <li className=\"page-item\"><a className=\"page-link\" href=\"#\">2</a></li>\n          <li className=\"page-item\"><a className=\"page-link\" href=\"#\">3</a></li>\n          {props.pagination.hasOwnProperty('next') ? \n              <li className=\"page-item\"><a className=\"page-link\" href={props.pagination['next'].url} tabIndex=\"-1\">Next</a></li> :\n              <li className=\"page-item disabled\"><a className=\"page-link\" href=\"#\" tabIndex=\"-1\">Next</a></li>\n          }\n        </ul>\n        : null}\n      </nav>\n  );\n}\n\nfunction PaginationNext(props) {\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}